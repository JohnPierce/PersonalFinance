# Generated by Django 5.0.6 on 2024-11-02 17:13

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        (
            "personal_finance_portfolio",
            "0013_alter_transaction_options_transaction_fees_and_more",
        ),
    ]

    operations = [
        migrations.CreateModel(
            name="TaxableAccount",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "cost_basis_method",
                    models.CharField(
                        choices=[
                            ("FIFO", "First In, First Out"),
                            ("LIFO", "Last In, First Out"),
                            ("HIFO", "Highest In, First Out"),
                            ("SPECIFIC", "Specific Identification"),
                        ],
                        default="FIFO",
                        max_length=20,
                    ),
                ),
                (
                    "wash_sale_tracking",
                    models.BooleanField(
                        default=True,
                        help_text="Enable wash sale detection and adjustment",
                    ),
                ),
                (
                    "portfolio",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="tax_settings",
                        to="personal_finance_portfolio.portfolio",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="TaxLot",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("quantity", models.IntegerField()),
                ("acquisition_date", models.DateTimeField()),
                ("cost_basis", models.DecimalField(decimal_places=2, max_digits=10)),
                ("remaining_quantity", models.IntegerField()),
                (
                    "adjusted_basis",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Cost basis adjusted for wash sales",
                        max_digits=10,
                    ),
                ),
                (
                    "account",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="tax_data_records.taxableaccount",
                    ),
                ),
                (
                    "transaction",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="tax_lot",
                        to="personal_finance_portfolio.transaction",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="TaxLotDisposition",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("quantity", models.IntegerField()),
                ("proceeds", models.DecimalField(decimal_places=2, max_digits=10)),
                ("date", models.DateTimeField()),
                (
                    "holding_period",
                    models.DurationField(help_text="Time between acquisition and sale"),
                ),
                (
                    "sale_transaction",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="tax_lot_dispositions",
                        to="personal_finance_portfolio.transaction",
                    ),
                ),
                (
                    "tax_lot",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="dispositions",
                        to="tax_data_records.taxlot",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="WashSale",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "disallowed_loss",
                    models.DecimalField(decimal_places=2, max_digits=10),
                ),
                ("wash_sale_window_start", models.DateTimeField()),
                ("wash_sale_window_end", models.DateTimeField()),
                (
                    "disposition",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="wash_sales",
                        to="tax_data_records.taxlotdisposition",
                    ),
                ),
                (
                    "replacement_lot",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="wash_sale_adjustments",
                        to="tax_data_records.taxlot",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="TaxableEvent",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "event_type",
                    models.CharField(
                        choices=[
                            ("DIV_QUALIFIED", "Qualified Dividend"),
                            ("DIV_ORDINARY", "Ordinary Dividend"),
                            ("ROC", "Return of Capital"),
                            ("STCG", "Short-Term Capital Gain"),
                            ("LTCG", "Long-Term Capital Gain"),
                        ],
                        max_length=20,
                    ),
                ),
                ("amount", models.DecimalField(decimal_places=2, max_digits=10)),
                ("date", models.DateTimeField()),
                (
                    "account",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="tax_data_records.taxableaccount",
                    ),
                ),
                (
                    "transaction",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="taxable_event",
                        to="personal_finance_portfolio.transaction",
                    ),
                ),
            ],
            options={
                "indexes": [
                    models.Index(
                        fields=["account", "date", "event_type"],
                        name="tax_data_re_account_0cbdf7_idx",
                    )
                ],
            },
        ),
        migrations.CreateModel(
            name="Form1099B",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("tax_year", models.IntegerField()),
                (
                    "st_covered_proceeds",
                    models.DecimalField(decimal_places=2, default=0, max_digits=10),
                ),
                (
                    "st_covered_basis",
                    models.DecimalField(decimal_places=2, default=0, max_digits=10),
                ),
                (
                    "st_uncovered_proceeds",
                    models.DecimalField(decimal_places=2, default=0, max_digits=10),
                ),
                (
                    "lt_covered_proceeds",
                    models.DecimalField(decimal_places=2, default=0, max_digits=10),
                ),
                (
                    "lt_covered_basis",
                    models.DecimalField(decimal_places=2, default=0, max_digits=10),
                ),
                (
                    "lt_uncovered_proceeds",
                    models.DecimalField(decimal_places=2, default=0, max_digits=10),
                ),
                (
                    "wash_sale_adjustments",
                    models.DecimalField(decimal_places=2, default=0, max_digits=10),
                ),
                (
                    "account",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="tax_data_records.taxableaccount",
                    ),
                ),
                (
                    "dispositions",
                    models.ManyToManyField(to="tax_data_records.taxlotdisposition"),
                ),
            ],
            options={
                "indexes": [
                    models.Index(
                        fields=["account", "tax_year"],
                        name="tax_data_re_account_344db3_idx",
                    )
                ],
                "unique_together": {("account", "tax_year")},
            },
        ),
    ]
